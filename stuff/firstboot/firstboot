#!/bin/bash
#firstboot
#exec 2> /var/log/firstboot.log  # send stderr to a log file
#exec 2> /dev/ttyS0              # send stderr to ttyS0
#exec 1>&2                       # send stdout to the same log file
#set -x                          # tell sh to display commands before execution

source /etc/firstboot.conf

if $no_run; then
    exit 0;
else
    echo timer > /sys/class/leds/nsa320:red:copy/trigger
    sleep 60;
    echo default-on > /sys/class/leds/nsa320:green:copy/trigger


    #If move to raid array is requested, do it first, reboot from array and continue.
    if $move_to_raid; then
        for n in {0..10} ; do
            mdadm --stop /dev/md$n
            mdadm --remove /dev/md$n
        done
        sleep 5;
        for n in {1..10} ; do
            mdadm --zero-superblock /dev/sda$n
        done
        sleep 5;
        for n in {1..10} ; do
		    parted -s /dev/sda rm $n;
	    done
	    sleep 5;
        parted -s /dev/sda mklabel gpt && \
        parted -s /dev/sda mkpart primary 1 16500 && \
        sleep 5;
        mdadm --create /dev/md0 --run --force --metadata=0.90 --level=1 --raid-devices=2 missing /dev/sda1 && \
        mkfs.$rfs_filesystem -L $rfs_label /dev/md0 && \
        mdadm --detail --scan >> /etc/mdadm/mdadm.conf && \
        sleep 5;
        debconf-set-selections <<< "mdadm mdadm/mail_to string root"
        debconf-set-selections <<< "mdadm mdadm/initrdstart string all"
        debconf-set-selections <<< "mdadm mdadm/initrdstart_notinconf boolean true"
        debconf-set-selections <<< "mdadm mdadm/autostart boolean true"
        debconf-set-selections <<< "mdadm mdadm/autocheck boolean true"
        debconf-set-selections <<< "mdadm mdadm/start_daemon boolean true"
        dpkg-reconfigure --frontend=noninteractive mdadm ; sleep 15;
        mkimage -A arm -O linux -T kernel  -C none -a 0x00008000 -e 0x00008000 -n Linux-$kernel     -d /boot/vmlinuz-$kernel    /boot/uImage && \
        mkimage -A arm -O linux -T ramdisk -C gzip -a 0x00000000 -e 0x00000000 -n initramfs-$kernel -d /boot/initrd.img-$kernel /boot/uInitrd && \
        sed -i -e "s/move_to_raid=true/move_to_raid=false/" /etc/firstboot.conf && \
        mkdir /tmp/mnt && \
        mount /dev/md0 /tmp/mnt && \
        rsync -auHxv --exclude=/proc/* --exclude=/sys/* --exclude=/tmp/* /* /tmp/mnt && \
        e2label /dev/sdb1 "oldrfs" && \
        mv /boot /old-boot && \
        umount /tmp/mnt && \
        shutdown -r
        #exit gracefully and wait for reboot
        exit 0
    fi




    #reset SSH host keys
    while [ $(pgrep -c sshd) -gt 1 ]; do
        systemctl stop ssh.service; sleep 1
        pkill --signal HUP sshd; sleep 1
        pkill --signal KILL sshd; sleep 1
    done
    rm -f /etc/ssh/ssh_host*
    ssh-keygen -Aq
    sleep 3
    systemctl start ssh.service


    #force update time with ntpdate
    systemctl stop ntp.service && ntpdate europe.pool.ntp.org
    sleep 3
    systemctl start ntp.service


    #update apt and command-not-found
    apt-get -qq update
    update-command-not-found &> /dev/null


    #install hpnssh
    if $hpnssh; then
	    cd /usr/src/hpnssh
	    tar zxf openssh-7.2p2.tar.gz
	    cd openssh-7.2p2
	    cat ../openssh-7_2_P2-hpn-14.10.diff | patch -p1
	    ./configure --prefix=/usr --sysconfdir=/etc/ssh --with-ssl-engine --with-pam
	    make
	    \cp /lib/systemd/system/ssh.service ../ssh.service
	    while [ $(pgrep -c sshd) -gt 1 ]; do
            systemctl stop ssh.service; sleep 1
            pkill --signal HUP sshd; sleep 1
            pkill --signal KILL sshd; sleep 1
        done
	    apt-get remove -y openssh-server openssh-client openssh-sftp-server ssh

	    make host-key && make install

	    cp ../ssh.service /lib/systemd/system/

	    systemctl unmask ssh.service
	    systemctl enable ssh.service
	    systemctl start ssh.service
	    systemctl status ssh.service
	    systemctl stop ssh.service
    fi




    if $create_swap; then
        #generate 1024MB swap file and add it to fstab
        dd if=/dev/zero of=/swapfile bs=1024k count=1k
        chown root:root /swapfile
        chmod 0600 /swapfile
        mkswap /swapfile
        cat <<EOT >> /etc/fstab
/swapfile   none   swap   sw   0   0

EOT
        swapon /swapfile
    fi




    #all done, prevent script to run on next boot
    sed -ie "s/no_run=false/no_run=true/" /etc/firstboot.conf

    #reboot in 1 min
    shutdown -r

    #exit service gracefully
    exit 0
fi